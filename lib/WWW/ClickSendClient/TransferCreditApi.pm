=begin comment

ClickSend v3 API

 This is an official SDK for [ClickSend](https://clicksend.com)  Below you will find a current list of the available methods for clicksend.  *NOTE: You will need to create a free account to use the API. You can register [here](https://dashboard.clicksend.com/#/signup/step1/)..* 

OpenAPI spec version: 3.1
Contact: support@clicksend.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

=end comment

=cut

#
# NOTE: This class is auto generated by the swagger code generator program. 
# Do not edit the class manually.
# Ref: https://github.com/swagger-api/swagger-codegen
#
package WWW::ClickSendClient::TransferCreditApi;

require 5.6.0;
use strict;
use warnings;
use utf8; 
use Exporter;
use Carp qw( croak );
use Log::Any qw($log);

use WWW::ClickSendClient::ApiClient;

use base "Class::Data::Inheritable";

__PACKAGE__->mk_classdata('method_documentation' => {});

sub new {
    my $class = shift;
    my $api_client;

    if ($_[0] && ref $_[0] && ref $_[0] eq 'WWW::ClickSendClient::ApiClient' ) {
        $api_client = $_[0];
    } else {
        $api_client = WWW::ClickSendClient::ApiClient->new(@_);
    }

    bless { api_client => $api_client }, $class;

}


#
# reseller_transfer_credit_put
#
# Transfer Credit
# 
# @param ResellerAccountTransferCredit $reseller_account_transfer_credit ResellerAccountTransferCredit model (required)
{
    my $params = {
    'reseller_account_transfer_credit' => {
        data_type => 'ResellerAccountTransferCredit',
        description => 'ResellerAccountTransferCredit model',
        required => '1',
    },
    };
    __PACKAGE__->method_documentation->{ 'reseller_transfer_credit_put' } = { 
    	summary => 'Transfer Credit',
        params => $params,
        returns => 'string',
        };
}
# @return string
#
sub reseller_transfer_credit_put {
    my ($self, %args) = @_;

    # verify the required parameter 'reseller_account_transfer_credit' is set
    unless (exists $args{'reseller_account_transfer_credit'}) {
      croak("Missing the required parameter 'reseller_account_transfer_credit' when calling reseller_transfer_credit_put");
    }

    # parse inputs
    my $_resource_path = '/reseller/transfer-credit';

    my $_method = 'PUT';
    my $query_params = {};
    my $header_params = {};
    my $form_params = {};

    # 'Accept' and 'Content-Type' header
    my $_header_accept = $self->{api_client}->select_header_accept('application/json');
    if ($_header_accept) {
        $header_params->{'Accept'} = $_header_accept;
    }
    $header_params->{'Content-Type'} = $self->{api_client}->select_header_content_type('application/json');

    my $_body_data;
    # body params
    if ( exists $args{'reseller_account_transfer_credit'}) {
        $_body_data = $args{'reseller_account_transfer_credit'};
    }

    # authentication setting, if any
    my $auth_settings = [qw(BasicAuth )];

    # make the API Call
    my $response = $self->{api_client}->call_api($_resource_path, $_method,
                                           $query_params, $form_params,
                                           $header_params, $_body_data, $auth_settings);
    if (!$response) {
        return;
    }
    my $_response_object = $self->{api_client}->deserialize('string', $response);
    return $_response_object;
}

1;
