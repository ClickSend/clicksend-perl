=begin comment

ClickSend v3 API

 This is an official SDK for [ClickSend](https://clicksend.com)  Below you will find a current list of the available methods for clicksend.  *NOTE: You will need to create a free account to use the API. You can register [here](https://dashboard.clicksend.com/#/signup/step1/)..* 

OpenAPI spec version: 3.1
Contact: support@clicksend.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

=end comment

=cut

#
# NOTE: This class is auto generated by ClickSend Codegen
# Please update the test cases below to test the API endpoints.
# Ref: https://github.com/swagger-api/swagger-codegen
#
use Test::More tests => 1; #TODO update number of test cases
use Test::Exception;

use lib 'lib';
use strict;
use warnings;

use_ok('WWW::ClickSendClient::ContactApi');

my $api = WWW::ClickSendClient::ContactApi->new();
isa_ok($api, 'WWW::ClickSendClient::ContactApi');

#
# lists_contacts_by_list_id_and_contact_id_delete test
#
{
    my $list_id = undef; # replace NULL with a proper value
    my $contact_id = undef; # replace NULL with a proper value
    my $result = $api->lists_contacts_by_list_id_and_contact_id_delete(list_id => $list_id, contact_id => $contact_id);
}

#
# lists_contacts_by_list_id_and_contact_id_get test
#
{
    my $list_id = undef; # replace NULL with a proper value
    my $contact_id = undef; # replace NULL with a proper value
    my $result = $api->lists_contacts_by_list_id_and_contact_id_get(list_id => $list_id, contact_id => $contact_id);
}

#
# lists_contacts_by_list_id_and_contact_id_put test
#
{
    my $list_id = undef; # replace NULL with a proper value
    my $contact_id = undef; # replace NULL with a proper value
    my $contact = undef; # replace NULL with a proper value
    my $result = $api->lists_contacts_by_list_id_and_contact_id_put(list_id => $list_id, contact_id => $contact_id, contact => $contact);
}

#
# lists_contacts_by_list_id_get test
#
{
    my $list_id = undef; # replace NULL with a proper value
    my $page = undef; # replace NULL with a proper value
    my $limit = undef; # replace NULL with a proper value
    my $result = $api->lists_contacts_by_list_id_get(list_id => $list_id, page => $page, limit => $limit);
}

#
# lists_contacts_by_list_id_post test
#
{
    my $contact = undef; # replace NULL with a proper value
    my $list_id = undef; # replace NULL with a proper value
    my $result = $api->lists_contacts_by_list_id_post(contact => $contact, list_id => $list_id);
}

#
# lists_copy_contact_put test
#
{
    my $from_list_id = undef; # replace NULL with a proper value
    my $contact_id = undef; # replace NULL with a proper value
    my $to_list_id = undef; # replace NULL with a proper value
    my $result = $api->lists_copy_contact_put(from_list_id => $from_list_id, contact_id => $contact_id, to_list_id => $to_list_id);
}

#
# lists_remove_opted_out_contacts_by_list_id_and_opt_out_list_id_put test
#
{
    my $list_id = undef; # replace NULL with a proper value
    my $opt_out_list_id = undef; # replace NULL with a proper value
    my $result = $api->lists_remove_opted_out_contacts_by_list_id_and_opt_out_list_id_put(list_id => $list_id, opt_out_list_id => $opt_out_list_id);
}

#
# lists_transfer_contact_put test
#
{
    my $from_list_id = undef; # replace NULL with a proper value
    my $contact_id = undef; # replace NULL with a proper value
    my $to_list_id = undef; # replace NULL with a proper value
    my $result = $api->lists_transfer_contact_put(from_list_id => $from_list_id, contact_id => $contact_id, to_list_id => $to_list_id);
}


1;
