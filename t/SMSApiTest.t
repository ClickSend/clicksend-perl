=begin comment

ClickSend v3 API

 This is an official SDK for [ClickSend](https://clicksend.com)  Below you will find a current list of the available methods for clicksend.  *NOTE: You will need to create a free account to use the API. You can register [here](https://dashboard.clicksend.com/#/signup/step1/)..* 

OpenAPI spec version: 3.1
Contact: support@clicksend.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

=end comment

=cut

#
# NOTE: This class is auto generated by ClickSend Codegen
# Please update the test cases below to test the API endpoints.
# Ref: https://github.com/swagger-api/swagger-codegen
#
use Test::More tests => 1; #TODO update number of test cases
use Test::Exception;

use lib 'lib';
use strict;
use warnings;

use_ok('WWW::ClickSendClient::SMSApi');

my $api = WWW::ClickSendClient::SMSApi->new();
isa_ok($api, 'WWW::ClickSendClient::SMSApi');

#
# sms_cancel_all_put test
#
{
    my $result = $api->sms_cancel_all_put();
}

#
# sms_cancel_by_message_id_put test
#
{
    my $message_id = undef; # replace NULL with a proper value
    my $result = $api->sms_cancel_by_message_id_put(message_id => $message_id);
}

#
# sms_history_export_get test
#
{
    my $filename = undef; # replace NULL with a proper value
    my $result = $api->sms_history_export_get(filename => $filename);
}

#
# sms_history_get test
#
{
    my $q = undef; # replace NULL with a proper value
    my $date_from = undef; # replace NULL with a proper value
    my $date_to = undef; # replace NULL with a proper value
    my $page = undef; # replace NULL with a proper value
    my $limit = undef; # replace NULL with a proper value
    my $result = $api->sms_history_get(q => $q, date_from => $date_from, date_to => $date_to, page => $page, limit => $limit);
}

#
# sms_inbound_get test
#
{
    my $q = undef; # replace NULL with a proper value
    my $page = undef; # replace NULL with a proper value
    my $limit = undef; # replace NULL with a proper value
    my $result = $api->sms_inbound_get(q => $q, page => $page, limit => $limit);
}

#
# sms_inbound_post test
#
{
    my $url = undef; # replace NULL with a proper value
    my $result = $api->sms_inbound_post(url => $url);
}

#
# sms_inbound_read_by_message_id_put test
#
{
    my $message_id = undef; # replace NULL with a proper value
    my $result = $api->sms_inbound_read_by_message_id_put(message_id => $message_id);
}

#
# sms_inbound_read_put test
#
{
    my $date_before = undef; # replace NULL with a proper value
    my $result = $api->sms_inbound_read_put(date_before => $date_before);
}

#
# sms_price_post test
#
{
    my $sms_messages = undef; # replace NULL with a proper value
    my $result = $api->sms_price_post(sms_messages => $sms_messages);
}

#
# sms_receipts_by_message_id_get test
#
{
    my $message_id = undef; # replace NULL with a proper value
    my $result = $api->sms_receipts_by_message_id_get(message_id => $message_id);
}

#
# sms_receipts_get test
#
{
    my $page = undef; # replace NULL with a proper value
    my $limit = undef; # replace NULL with a proper value
    my $result = $api->sms_receipts_get(page => $page, limit => $limit);
}

#
# sms_receipts_post test
#
{
    my $url = undef; # replace NULL with a proper value
    my $result = $api->sms_receipts_post(url => $url);
}

#
# sms_receipts_read_put test
#
{
    my $date_before = undef; # replace NULL with a proper value
    my $result = $api->sms_receipts_read_put(date_before => $date_before);
}

#
# sms_send_post test
#
{
    my $sms_messages = undef; # replace NULL with a proper value
    my $result = $api->sms_send_post(sms_messages => $sms_messages);
}

#
# sms_templates_by_template_id_delete test
#
{
    my $template_id = undef; # replace NULL with a proper value
    my $result = $api->sms_templates_by_template_id_delete(template_id => $template_id);
}

#
# sms_templates_by_template_id_put test
#
{
    my $template_id = undef; # replace NULL with a proper value
    my $sms_template = undef; # replace NULL with a proper value
    my $result = $api->sms_templates_by_template_id_put(template_id => $template_id, sms_template => $sms_template);
}

#
# sms_templates_get test
#
{
    my $page = undef; # replace NULL with a proper value
    my $limit = undef; # replace NULL with a proper value
    my $result = $api->sms_templates_get(page => $page, limit => $limit);
}

#
# sms_templates_post test
#
{
    my $sms_template = undef; # replace NULL with a proper value
    my $result = $api->sms_templates_post(sms_template => $sms_template);
}


1;
